{"version":3,"sources":["Helpers/Contexts.js","components/QuizForm.js","components/LogForm.js","components/QuizMainMenu.js","Helpers/QuestionBank.js","components/Quiz.js","components/EndScreen.js","components/QuizPrompt.js","RouterMapping.js","App.js","index.js"],"names":["QuizContext","createContext","userDataRead","props","username","timer","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","error","beforeUpload","reader","FileReader","onload","e","target","result","bank","split","s","length","readAsText","value","QuizForm","useState","navigate","userData","setUserData","useNavigate","routeChange","path","onFinish","values","className","initialValues","remember","Item","rules","required","prefix","UserOutlined","placeholder","min","max","defaultValue","addonAfter","icon","UploadOutlined","type","htmlType","onClick","NormalLoginForm","QuizMainMenu","useContext","setGameState","gameState","setTimer","Date","now","Questions","prompt","options","answer","Quiz","score","setScore","currQuestion","setCurrQuestion","optionSelected","setOptionSelected","useEffect","Countdown","Statistic","gutter","span","title","array","op","buttonGroup","map","option","number","chooseOption","renderButtons","EndScreen","QuizPrompt","Provider","RoutingConfig","fallback","exact","element","LogForm","App","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAEaA,EAAcC,0B,OCOrBC,EAAe,GAEfC,EAAQ,CACZC,SAAU,GACVC,MAAO,GAEPC,KAAM,OACNC,OAAQ,mDACRC,QAAS,CACPC,cAAe,sBAEjBC,SATY,SASHC,GACkB,cAArBA,EAAKC,KAAKC,QACZC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEL,SAArBL,EAAKC,KAAKC,QACZI,IAAQC,QAAR,UAAmBP,EAAKC,KAAKN,KAA7B,gCACAQ,QAAQC,IAAR,UAAeJ,EAAKC,KAAKN,KAAzB,iCAC8B,UAArBK,EAAKC,KAAKC,QACnBI,IAAQE,MAAR,UAAiBR,EAAKC,KAAKN,KAA3B,0BAGJc,aAAc,SAACR,GACb,IAAMS,EAAS,IAAIC,WAenB,OAbAD,EAAOE,OAAS,SAAAC,GACdV,QAAQC,WAAWS,EAAEC,OAAOC,QAE5BT,IAAQC,QAAQM,EAAEC,OAAOC,QAEzB,IADA,IAAMC,EAAOH,EAAEC,OAAOC,OAAOE,MAAM,MAC1BC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BZ,IAAQC,QAAQS,EAAKE,IACrBf,QAAQC,IAAIY,EAAKE,KAGrBR,EAAOU,WAAWnB,GAClBE,QAAQC,IAAIM,IAEL,IAIX,SAASX,EAASsB,GAChBlB,QAAQC,IAAI,UAAWiB,GAGzB,IAyFeC,EAzFE,WACf,MAAkCC,mBAAShC,GAErCiC,GAFN,EAAQC,SAAR,EAAkBC,YAEDC,eAEXC,EAAc,SAACC,GACnBvB,IAAQC,QAAR,uBAAgCsB,IAChCL,EAASK,IAGLC,EAAW,SAACC,GAChB5B,QAAQC,IAAI,4BAA6B2B,GACzCH,EAAY,UAId,OACE,qBAAKI,UAAU,WAAf,SACE,eAAC,IAAD,CACErC,KAAK,eACLqC,UAAU,aACVC,cAAe,CACbC,UAAU,GAEZJ,SAAUA,EANZ,UAQE,cAAC,IAAKK,KAAN,CACExC,KAAK,WACLyC,MAAO,CACL,CACEC,UAAU,EACV/B,QAAS,gCALf,SASE,cAAC,IAAD,CAAOgC,OAAQ,cAACC,EAAA,EAAD,CAAcP,UAAU,wBAA0BQ,YAAY,eAE/E,cAAC,IAAKL,KAAN,CACExC,KAAK,QACLyC,MAAO,CACL,CACEC,UAAU,EACV/B,QAAS,uBALf,SAcE,cAAC,IAAD,CACEmC,IAAK,EACLC,IAAK,IACLC,aAAc,GACd5C,SAAUA,EACV6C,WAAW,kBACXZ,UAAU,wBAId,cAAC,IAAKG,KAAN,UACE,cAAC,IAAD,2BAAY3C,GAAZ,aACE,cAAC,IAAD,CACEqD,KAAM,cAACC,EAAA,EAAD,IACNd,UAAU,gBAFZ,4CASJ,cAAC,IAAKG,KAAN,UACE,cAAC,IAAD,CAAQY,KAAK,UAAUC,SAAS,SAAShB,UAAU,oBACjDiB,QAAS,kBAAMnB,KADjB,0BAMF,cAAC,IAAD,CAAQiB,KAAK,UAAUf,UAAU,oBAE/BiB,QAAS,kBAAMrB,EAAY,SAF7B,gCCtGR,IAgDesB,EAhDS,WACpB,IAGM1B,EAAWG,cAMjB,OACI,qBAAKK,UAAU,WAAf,SACI,eAAC,IAAD,CACIrC,KAAK,eACLqC,UAAU,aACVC,cAAe,CACXC,UAAU,GAEdJ,SAjBK,SAACC,GACd5B,QAAQC,IAAI,4BAA6B2B,IAUrC,UAQI,cAAC,IAAKI,KAAN,CACIxC,KAAK,WACLyC,MAAO,CACH,CACIC,UAAU,EACV/B,QAAS,gCALrB,SASI,cAAC,IAAD,CAAOgC,OAAQ,cAACC,EAAA,EAAD,CAAcP,UAAU,wBAA0BQ,YAAY,eAIjF,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAQY,KAAK,UAAUC,SAAS,SAAShB,UAAU,oBAAnD,4BAKJ,cAAC,IAAD,CAAQe,KAAK,UAAUf,UAAU,oBAC7BiB,QAnCI,WAEhBzB,EADW,MAiCH,wBCrCD2B,MA7Bf,WAEI,MAAqDC,qBAAW/D,GAA7CgE,GAAnB,EAAQC,UAAR,EAAmBD,cAAc3D,EAAjC,EAAiCA,MAAO6D,EAAxC,EAAwCA,SAaxC,OACI,qBAAKvB,UAAU,YAAf,SAQI,wBAAQiB,QAdW,WACvBM,EAASC,KAAKC,MAAc,IAAN/D,GACtB2D,EAAa,SAYT,2B,OC7BCK,EAAY,CACrB,CACEC,OAAQ,mBACRC,QAAS,CAAC,KAAM,OAAQ,SACxBC,OAAQ,GAEV,CACEF,OAAQ,oFACRC,QAAS,CAAC,QAAS,SAAU,SAC7BC,OAAQ,GAEV,CACEF,OAAQ,+CACRC,QAAQ,CAAC,QAAS,UAAW,MAAO,OAAQ,MAAO,WACnDC,OAAQ,I,2BC0ECC,MAnFf,WACI,MAA2DV,qBAAW/D,GAA9D0E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUX,EAAzB,EAAyBA,aAAc3D,EAAvC,EAAuCA,MAEvC,GAFA,EAA8C6D,SAENhC,mBAAS,IAAjD,mBAAO0C,EAAP,KAAqBC,EAArB,KACA,EAA4C3C,mBAAS,IAArD,mBAAO4C,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WAENlE,QAAQC,IAAR,uDAA4DV,EAAQ8D,KAAKC,OAAO,IAAhF,cAKJ,IAwCQa,EAAcC,IAAdD,UAOR,OANiBd,KAAKC,MAOlB,sBAAKzB,UAAU,YAAf,UACI,yEACA,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAKwC,OAAQ,EAAb,SACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAACH,EAAD,CAAWI,MAAM,YAAYrD,MAAOmC,KAAKC,MAAc,IAAN/D,EAAYoC,SAXhE,WACb3B,QAAQC,IAAI,+BACZiD,EAAa,sBAaT,oBAAIrB,UAAU,UAAd,SAAyB0B,EAAUO,GAAcN,SACjD,qBAAK3B,UAAU,eAAf,SArDc,WAClB7B,QAAQC,IAAR,uDAA4D+D,IAE5D,IAAMQ,EAAQjB,EAAUO,GAAcL,QAEhCgB,EAAK,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAC7DC,EAAcF,EAAMG,KAAI,SAACC,EAAQC,GAGnC,OAFAA,GAAkB,EAClB7E,QAAQC,IAAR,oBAAyB4E,EAAzB,uBAA8CD,EAA9C,0BAAsEH,EAAGI,GAAzE,MACO,wBAAQhD,UAAU,SAASiB,QAAS,kBAd9B,SAAC8B,GAClB5E,QAAQC,IAAR,yBAA8B2E,IAC9BX,EAAkBW,GAYmCE,CAAaL,EAAGI,KAA1D,SAAqED,OAEhF,OAAOF,EA2CEK,KAEJjB,GAAgBP,EAAUvC,OAAS,EAC/B,wBAAQ8B,QA7BF,WACXkB,GAAkBT,EAAUO,GAAcJ,QAC1CG,EAASD,EAAQ,GAErBV,EAAa,cAyBJ,yBACG,wBAAQJ,QA5CH,WACjB9C,QAAQC,IAAR,4BAAiC+D,EAAjC,gCAAuET,EAAUO,GAAcJ,SAG3FM,GAAkBT,EAAUO,GAAcJ,QAC1CG,EAASD,EAAQ,GAMrBG,EAAgBD,EAAe,IAiCnB,+B,OCnDLkB,MAxBf,WACI,MAAoD/B,qBAAW/D,GAAvD0E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUX,EAAzB,EAAyBA,aAAcE,EAAvC,EAAuCA,SAcvC,OACI,sBAAKvB,UAAU,YAAf,UACI,oBAAIA,UAAU,mBAAd,yCACA,qBAAIA,UAAU,QAAd,cAAwB+B,EAAxB,MAAkCL,EAAUvC,OAA5C,IAAqD,OACrD,wBAAQ8B,QAhBI,WAChBe,EAAS,GACTX,EAAa,QACbE,EAASC,KAAKC,MAAQ,MAalB,gCCOG2B,MAxBf,WAEI,MAAkC7D,mBAAS,QAA3C,mBAAO+B,EAAP,KAAkBD,EAAlB,KACA,EAA0B9B,mBAAS,GAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KACA,EAA0BzC,mBAAS,GAAnC,mBAAO7B,EAAP,KAAc6D,EAAd,KAEA,OACI,sBAAKvB,UAAU,WAAf,UACI,iFACA,mDAKA,eAAC3C,EAAYgG,SAAb,CAAsBhE,MAAO,CAAEiC,YAAWD,eAAcU,QAAOC,WAAUtE,QAAO6D,YAAhF,UACkB,QAAbD,GAAuB,cAAC,EAAD,IACV,QAAbA,GAAuB,cAAC,EAAD,IACV,aAAbA,GAA4B,cAAC,EAAD,WCE9BgC,EAXO,kBAClB,eAAC,IAAD,WACE,cAAC,WAAD,CAAUC,SAAU,+CACpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC3D,KAAK,IAAI4D,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAO5D,KAAK,OAAO4D,QAAS,cAACC,EAAD,MAC5B,cAAC,IAAD,CAAO7D,KAAK,QAAQ4D,QAAS,cAAC,EAAD,aClB/BE,E,4JACJ,WACE,OACE,cAAC,EAAD,Q,GAHYC,IAAMC,WAmCTF,IC5BfG,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.c5d7b019.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const QuizContext = createContext();\nexport const UserDataContext = createContext();","import React, { createContext, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, InputNumber, Button, Checkbox, Upload, message } from 'antd';\nimport { UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nimport { UserDataContext } from '../Helpers/Contexts';\n\nconst userDataRead = {}\n\nconst props = {\n  username: '',\n  timer: '',\n\n  name: 'file',\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully`);\n      console.log(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  beforeUpload: (file) => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      console.log(typeof e.target.result);\n      //message.success(e.target.result);\n      message.success(e.target.result)\n      const bank = e.target.result.split('\\n');\n      for (let s = 0; s < bank.length; s++) {\n        message.success(bank[s]);\n        console.log(bank[s]);\n      }\n    };\n    reader.readAsText(file);\n    console.log(reader);\n    // Prevent upload\n    return false;\n  }\n};\n\nfunction onChange(value) {\n  console.log('changed', value);\n}\n\nconst QuizForm = () => {\n  const { userData, setUserData } = useState(userDataRead)\n\n  const navigate = useNavigate();\n\n  const routeChange = (path) => {\n    message.success(`reached path ${path}`)\n    navigate(path);\n  }\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n    routeChange(\"/quiz\");\n  };\n\n\n  return (\n    <div className=\"App flex\">\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Username!',\n            },\n          ]}\n        >\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n          name=\"timer\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input timer',\n            },\n          ]}\n        >\n          {/* <Input\n          prefix={<FieldTimeOutlined className=\"site-form-item-icon\" />}\n          type=\"text\"\n          placeholder=\"Timer\"\n        /> */}\n          <InputNumber\n            min={1}\n            max={1000}\n            defaultValue={40}\n            onChange={onChange}\n            addonAfter=\"Timer (Seconds)\"\n            className=\"login-form-button\" />\n\n        </Form.Item>\n\n        <Form.Item>\n          <Upload {...props} >\n            <Button\n              icon={<UploadOutlined />}\n              className=\"upload-button\"\n            >\n              Click to Upload Quiz file\n            </Button>\n          </Upload>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\n            onClick={() => onFinish()}>\n            Start Quiz\n          </Button>\n        </Form.Item>\n\n        <Button type=\"primary\" className=\"login-form-button\"\n\n          onClick={() => routeChange(\"/log\")}>\n          Get Log File\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default QuizForm;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, InputNumber, Button, Checkbox, Upload, message } from 'antd';\nimport { UserOutlined, FieldTimeOutlined } from '@ant-design/icons';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst props = {\n    username: '',\n    timer: '',\n\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text',\n    },\n    onChange(info) {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    },\n};\n\nfunction onChange(value) {\n    console.log('changed', value);\n}\n\nconst NormalLoginForm = () => {\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n    const navigate = useNavigate();\n    const routeChange = () => {\n        let path = \"/\";\n        navigate(path);\n    }\n\n    return (\n        <div className=\"App flex\">\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Download Log\n                    </Button>\n                </Form.Item>\n\n                <Button type=\"primary\" className=\"login-form-button\"\n                    onClick={routeChange}>\n                    Home\n                </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default NormalLoginForm;","import React, { useContext, useState } from 'react';\n// import { Statistic, Row, Col } from 'antd';\nimport { QuizContext } from \"../Helpers/Contexts\"\nimport \"../App.css\"\n\nfunction QuizMainMenu() {\n    /* Global State */\n    const { gameState, setGameState, timer, setTimer } = useContext(QuizContext);\n    // const { Countdown } = Statistic;\n\n    // const onFinish = () => {\n    //     console.log(\"Timer finished! in <Quiz />\");\n    //     setGameState(\"endScreen\");\n    // }\n\n    const startButtonOnClick = () => {\n        setTimer(Date.now() + timer*1000);\n        setGameState(\"quiz\");\n    }\n\n    return (\n        <div className='flex Menu'>\n            {/* <div className='flex'>\n                <Row gutter={0}>\n                    <Col span={20}>\n                        <Countdown title=\"Time left\" value={Date.now() + timer * 1000} onFinish={onFinish} />\n                    </Col>\n                </Row>\n            </div> */}\n            <button onClick={startButtonOnClick}>Start Quiz</button>\n        </div>\n    )\n}\n\nexport default QuizMainMenu;\n\n\n\n/*\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Card, Button } from 'antd';\nimport { Radio, Input, Space } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { RightOutlined } from '@ant-design/icons';\n\n\nconst Quiz = () => {\n\n    const state = {\n        value: 1\n    }\n    const onRadioChange = e => {\n        // console.log('radio checked', e.target.value);\n        // this.setState({\n        //     value: e.target.value,\n        // });\n    };\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    const navigate = useNavigate();\n    \n    return (\n        <div className=\"App flex\">\n            <div class=\"quiz-frame\">\n                <div className=\"site-card-border-less-wrapper\">\n                    <Card title=\"Card title\" bordered={false} style={{ width: 300 }}>\n                        {}\n                        </Card>\n                        </div>\n                        <div class=\"quiz-next flex\">\n                            <Button type=\"primary\" className=\"login-form\"\n                                shape=\"circle\"\n                                icon={<RightOutlined />}\n                                onClick={() => navigate(\"/\")} />\n        \n                        </div>\n                    </div>\n                </div>\n            );\n        \n        };\n        \n        export default Quiz;\n\n*/","export const Questions = [\n    {\n      prompt: \"What is my name?\",\n      options: [\"RV\", \"Josh\", \"Pedro\" ],\n      answer: 3,\n    },\n    {\n      prompt: \"Which of this is not a programming language. This is also a part of the question?\",\n      options: [\"Cobra\", \"Python\", \"Diano\" ],\n      answer: 3,\n    },\n    {\n      prompt: \"Which of this is not a javascript framework?\",\n      options:[\"React\", \"Angular\", \"Vue\", \"Java\", \"asd\", \"sdasdas\"],\n      answer: 3,\n    },\n  ];","import React, { useState, useContext, useEffect } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport { Questions } from \"../Helpers/QuestionBank\";\nimport { Statistic, Row, Col } from 'antd';\n\nfunction Quiz() {\n    const { score, setScore, setGameState, timer, setTimer } = useContext(QuizContext);\n\n    const [currQuestion, setCurrQuestion] = useState(0);\n    const [optionSelected, setOptionSelected] = useState(\"\");\n\n    useEffect(() => {\n        // setTimer(timer);\n        console.log(`loaded <Quiz /> component. Timer is set for ${(timer - Date.now())/1000} secs.`);\n    });\n\n    \n\n    const chooseOption = (option) => {\n        console.log(`Clicked button ${option}`);\n        setOptionSelected(option);\n    };\n\n    const renderButtons = () => {\n        console.log(`Rendering Buttons: Current optionSelected is ${optionSelected}`);\n        // works fine\n        const array = Questions[currQuestion].options;\n        var number = 0;\n        const op = [\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"];\n        const buttonGroup = array.map((option, number) => { // here you return the new array created by map\n            number = number + 1;\n            console.log(`Number is ${number}, Option is ${option}, chooseOption(${op[number]})`);\n            return <button className='button' onClick={() => chooseOption(op[number])}>{option}</button>\n        });\n        return buttonGroup;\n    };\n\n    const nextQuestion = () => {\n        console.log(`Option selected = ${optionSelected} \\n Correct Answer = ${Questions[currQuestion].answer}`);\n        // console.log(`optionSelected == Questions[currQuestion].answer -> ${optionSelected == Questions[currQuestion].answer}`);\n\n        if (optionSelected == Questions[currQuestion].answer) {\n            setScore(score + 1);\n        }\n        // alert(score);\n        if (currQuestion == 'sizeOfTotalAskableQuestions') {\n            // show results button\n        }\n        setCurrQuestion(currQuestion + 1);\n    };\n\n    const finishQuiz = () => {\n        if (optionSelected == Questions[currQuestion].answer) {\n            setScore(score + 1);\n        }\n        setGameState(\"endScreen\");\n    }\n\n    const { Countdown } = Statistic;\n    const deadline = Date.now() + 1000 * 5; // Moment is also OK\n    const onFinish = () => {\n        console.log(\"Timer finished! in <Quiz />\");\n        setGameState(\"endScreen\");\n    }\n\n    return (\n        <div className='Quiz flex'>\n            <p>Question  Answers | In (Quiz/) component</p>\n            <div className='flex'>\n                <Row gutter={0}>\n                    <Col span={20}>\n                        <Countdown title=\"Time left\" value={Date.now() + timer*1000} onFinish={onFinish} />\n                    </Col>\n                </Row>\n            </div>\n            <h2 className='heading'>{Questions[currQuestion].prompt}</h2>\n            <div className=\"options flex\">\n                {renderButtons()}\n            </div>\n            {currQuestion == Questions.length - 1 ?\n                (<button onClick={finishQuiz}>Finish Quiz</button>) : (\n                    <button onClick={nextQuestion}>Next Question</button>\n                )}\n\n        </div>\n    )\n}\n\nexport default Quiz;","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { QuizContext } from \"../Helpers/Contexts\"\nimport \"../App.css\";\nimport { Questions } from \"../Helpers/QuestionBank\";\n\nfunction EndScreen() {\n    const { score, setScore, setGameState, setTimer } = useContext(QuizContext);\n\n    const restartQuiz = () => {\n        setScore(0);\n        setGameState(\"menu\");\n        setTimer(Date.now() + 1000 * 7);\n\n        /* Trigger backend API to store quiz results in database */\n        // axios.get(\"http://localhost:8080/\", { crossdomain: true }).then(response => {\n        //     setText(response.data.text);\n        //     setAuthor(response.data.author);\n        // });\n    }\n\n    return (\n        <div className='Menu flex'>\n            <h1 className='headingEndScreen'>Quiz finished. Well played!</h1>\n            <h3 className='score'> {score} / {Questions.length} {\" \"}</h3>\n            <button onClick={restartQuiz}> Restart Quiz </button>\n        </div>\n    )\n}\n\nexport default EndScreen;","import React, { useState } from 'react';\n\nimport Quiz from './Quiz';\nimport EndScreen from './EndScreen';\nimport QuizMainMenu from './QuizMainMenu'\n\nimport { QuizContext } from \"../Helpers/Contexts\"\n\nfunction QuizPrompt() {\n    /* Global State */\n    const [gameState, setGameState] = useState(\"menu\");\n    const [score, setScore] = useState(0);\n    const [timer, setTimer] = useState(0);\n\n    return (\n        <div className='App flex'>\n            <h1>File uploaded. (QuizPrompt/))  Begin quiz now!)</h1>\n            <p1> Timer Runs Here </p1>\n\n\n            {/* The following provided state can be accessed in the components inside QuizContext */}\n\n            <QuizContext.Provider value={{ gameState, setGameState, score, setScore, timer, setTimer }}>\n                {gameState == \"menu\" && <QuizMainMenu />}\n                {gameState == \"quiz\" && <Quiz />}\n                {gameState == \"endScreen\" && <EndScreen />}\n            </QuizContext.Provider>\n\n        </div>\n    )\n}\n\nexport default QuizPrompt;\n\n\n\n/*\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Card, Button } from 'antd';\nimport { Radio, Input, Space } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { RightOutlined } from '@ant-design/icons';\n\n\nconst Quiz = () => {\n\n    const state = {\n        value: 1\n    }\n    const onRadioChange = e => {\n        // console.log('radio checked', e.target.value);\n        // this.setState({\n        //     value: e.target.value,\n        // });\n    };\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    const navigate = useNavigate();\n    \n    return (\n        <div className=\"App flex\">\n            <div class=\"quiz-frame\">\n                <div className=\"site-card-border-less-wrapper\">\n                    <Card title=\"Card title\" bordered={false} style={{ width: 300 }}>\n                        {}\n                        </Card>\n                        </div>\n                        <div class=\"quiz-next flex\">\n                            <Button type=\"primary\" className=\"login-form\"\n                                shape=\"circle\"\n                                icon={<RightOutlined />}\n                                onClick={() => navigate(\"/\")} />\n        \n                        </div>\n                    </div>\n                </div>\n            );\n        \n        };\n        \n        export default Quiz;\n\n*/","import React, { Suspense } from 'react';\n// import {\n//   BrowserRouter,\n//   Route,\n//   Link,\n  \n// } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Routes, Switch, Link } from 'react-router-dom';\n\nimport QuizForm from './components/QuizForm';\nimport LogForm from './components/LogForm';\nimport QuizMainMenu from './components/QuizMainMenu';\nimport QuizPrompt from './components/QuizPrompt';\n\n\nconst RoutingConfig = () => (\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}></Suspense>\n      <Routes>\n        <Route exact path=\"/\" element={<QuizForm/>} />\n        <Route path=\"/log\" element={<LogForm/>} />\n        <Route path=\"/quiz\" element={<QuizPrompt/>} />\n      </Routes>\n    </Router>\n);\n\nexport default RoutingConfig;\n","import React, { Suspense } from \"react\";\nimport \"./App.css\";\nimport RoutingConfig from \"./RouterMapping\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <RoutingConfig/>\n    );\n  }\n}\n\n\n//===========================================================\n// class App extends React.Component {\n//   state = { tasks: [], currentTask: \"\", username: \"\", timer: \"\" };\n//   render() {\n//     const { tasks } = this.state;\n//     return <Router>\n//       <Route path=\"/\" component={home}></Route>\n//       <Route path=\"/log\" component={log}></Route>\n//     </Router>\n//   }\n// }\n// class home extends React.Component {\n//   render() {\n//     return (\n//       <QuizForm/>\n//     );\n//   }\n// }\n// class log extends React.Component {\n//   render() {\n//     return <label>log component</label>\n//   }\n// }\n// React.render( <App/> , document.getElementById('root'))\n\n\nexport default App;\n\n\n\n/*\nclass App extends Tasks {\n  state = { tasks: [], currentTask: \"\", username: \"\", timer: \"\" };\n  render() {\n    const { tasks } = this.state;\n    return (\n      <div className=\"App flex\">\n        <Paper elevation={3} className=\"container\">\n          <div className=\"heading\">TO-DO</div>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"flex\"\n            style={{ margin: \"15px 0\" }}\n          >\n            \n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              style={{ width: \"80%\" }}\n              value={this.state.currentTask}\n              required={true}\n              onChange={this.handleChange}\n              placeholder=\"Add New TO-DO\"\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Name\"\n              style={{ width: \"80%\" }}\n              variant=\"outlined\"\n              value={this.state.username}\n              placeholder=\"Enter your Name\"\n            />\n\n\n            <Button\n              style={{ height: \"40px\" }}\n              color=\"primary\"\n              variant=\"outlined\"\n              type=\"submit\"\n            >\n              Add task\n            </Button>\n          </form>\n          <div>\n            {tasks.map((task) => (\n              <Paper\n                key={task._id}\n                className=\"flex task_container\"\n              >\n                <Checkbox\n                  checked={task.completed}\n                  onClick={() => this.handleUpdate(task._id)}\n                  color=\"primary\"\n                />\n                <div\n                  className={\n                    task.completed\n                      ? \"task line_through\"\n                      : \"task\"\n                  }\n                >\n                  {task.task}\n                </div>\n                <Button\n                  onClick={() => this.handleDelete(task._id)}\n                  color=\"secondary\"\n                >\n                  delete\n                </Button>\n              </Paper>\n            ))}\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//const root = ReactDOM.createRoot(document.getElementById('root'));\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById(\"root\")\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}